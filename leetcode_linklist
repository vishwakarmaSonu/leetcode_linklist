94 binary tree inorder traversal
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   void inorder(TreeNode* root, vector<int> &ans){
       //base case
       if(root==NULL)
          return ;
        
        // left call
        inorder(root->left, ans);
        //store the value in ans
        ans.push_back(root->val);

        //right call
        inorder(root->right, ans);

   }



    vector<int> inorderTraversal(TreeNode* root) {
       
        // here we create a vector
        vector<int> ans;
       
       //inorder funtion is made
        inorder(root, ans);
       
        //return ans 
        return ans;

        

        
        
    }
};



